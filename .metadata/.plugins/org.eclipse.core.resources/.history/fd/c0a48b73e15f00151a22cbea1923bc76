package Controlers;

import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.annotation.PostConstruct;
import javax.enterprise.inject.Model;
import javax.enterprise.inject.Produces;
import javax.faces.bean.ManagedBean;
import javax.inject.Inject;
import javax.inject.Named;

import Other.Login;
import Other.Structure;
import Other.Validation;
import database.Data;
import userPack.User;



@ManagedBean
@Model
public class Controler {
	
//	private String login,password,mail,name,surnanme;	
	
	User userdata = User.getInstance();
	
	Login log = Login.getInstance();

	public void print(){		
		System.out.println("hello");		
	}
	
	public void save(){ // tu urobit validaciu
		Data datas = new Data();
		Validation validation = new Validation();
		
		if(validation.mail() && validation.login() && validation.password() && validation.name() && validation.surname() &&(userdata.getRepeatPassword()).equals(userdata.getPassword())){ // malo by ist
		datas.save(userdata);
		}else{
			System.out.print("Bad inputs");
		}
	}
		
	public void update(){
		Data datas = new Data();
		Validation validation = new Validation();
//		datas.update(userdata);
		if(validation.mail() && validation.login() && validation.password() && validation.name() && validation.surname() &&(userdata.getRepeatPassword()).equals(userdata.getPassword())){
			datas.update(userdata);
		}else{
			System.out.print("Bad inputs");
		}
		
	}
	
	public String padding(int index){//////////////////////////
		Data datas = new Data();
		int level = datas.levels.get(index);
		int pixels = 5;
		
		return + pixels*level +"px";
	}
	
	///////////////////////////////////////////////////////////
	public String editable(){
		Data datas = new Data();
		datas.loadLogin();		
		
		if((log.getLogin()).equals(userdata.getLogin()) && (log.getPassword()).equals(userdata.getPassword())){
			return "editUser";			
		}else{
			return "noLogged";			
		}
	}
	
/////////////////////////////////////////////////////////////
	public boolean skusobna(){ 
		Data datas = new Data();
		datas.loadLogin();
		datas.sortedList();
		if((log.getLogin()).equals(userdata.getLogin()) && (log.getPassword()).equals(userdata.getPassword())){
			return true;			
		}else{
			return false;			
		}
	}
	
	public boolean sorting(int index){/////////////////////////////////////////////////////
		Data datas = new Data();
		datas.load();
		
		if(datas.users.size() >= index){
			return true;
		}else{
			return false;
		}
		
	}
	
	public String isRegistred(){		
	
		Data datas = new Data();
		datas.load();
		System.out.println(datas.users.get(0).getName() + datas.users.get(0).getSurname());
		System.out.println(datas.users.get(1).getName() + datas.users.get(1).getSurname());
		System.out.println(datas.users.get(2).getName() + datas.users.get(2).getSurname());
		datas.loadLogin(); // tu som menil		

		
		if((log.getLogin()).equals(userdata.getLogin()) && (log.getPassword()).equals(userdata.getPassword())){
			return "Welcome "+ userdata.getName() +" " + userdata.getSurname() + " ";			
		}else{
			return "You are not registered ";			
		}
	}
	
	public User getUserdata() {
		return userdata;
	}

	public void setUserdata(User userdata) {
		this.userdata = userdata;
	}
	
	public Login getLog() {
		return log;
	}

	public void setLog(Login log) {
		this.log = log;
	}
}
